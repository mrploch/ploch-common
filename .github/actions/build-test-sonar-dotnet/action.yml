name: 'Build and Test and Sonar'
description: 'Build and Test .NET Solution with SonarCloud'
inputs:
  solution-path:
    description: 'Solution path to build'
    required: true
  sonar-project-key:
    description: 'SonarCloud project key'
    required: true
  sonar-organization:
    description: 'SonarCloud organization'
    required: true
  sonar-token:
    description: 'SonarCloud token'
    required: true
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    - name: Restore dependencies
      run: dotnet restore ${{ inputs.solution-path }}
    - name: Install SonarCloud Scanner
      run: dotnet tool install --global dotnet-sonarscanner
    - name: Install dotnet-coverage
      run: dotnet tool install --global dotnet-coverage
    - name: SonarScanner Begin
      run: dotnet sonarscanner begin /k:"${{ inputs.sonar-project-key }}" /o:"${{ inputs.sonar-organization }}" /d:sonar.login="${{ inputs.sonar-token }}" /d:sonar.cs.opencover.reportsPaths=**/CoverageResults/coverage.opencover.xml /d:sonar.host.url="https://sonarcloud.io"
    - name: Build
      run: dotnet build ${{ inputs.solution-path }} --no-restore
    - name: Test Coverage
      run: dotnet test ${{ inputs.solution-path }} --verbosity normal --no-build --logger "trx;LogFileName=TestOutputResults.xml" /p:CollectCoverage=true /p:CoverletOutput=./CoverageResults/ "/p:CoverletOutputFormat=cobertura%2copencover"
    - name: SonarScanner End
      run: dotnet sonarscanner end /d:sonar.login="${{ inputs.sonar-token }}"