# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build .NET
run-name: Build .NET on ${{ matrix.os }} with ${{ matrix.dotnet-version }}, branch ${{ github.ref }}
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - run: echo "The branch name is ${{ github.repository }}"
      - uses: actions/checkout@v3
      - name: Copy documentation files
        run: cp ./README.md ./DocumentationSite/index.md
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore dependencies
        run: dotnet restore Ploch.Common.sln
      - name: Install SonarCloud Scanner
        run: dotnet tool install --global dotnet-sonarscanner
      - name: Install dotnet-coverage
        run: dotnet tool install --global dotnet-coverage
      - name: SonarScanner Begin
        run: dotnet sonarscanner begin /k:"mrploch_ploch-common" /o:"mrploch" /d:sonar.login="${{secrets.SONAR_TOKEN}}" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.host.url="https://sonarcloud.io"
      - name: Build
        run: dotnet build Ploch.Common.sln --no-restore
      - name: Test Coverage
        run: dotnet-coverage collect 'dotnet test Ploch.Common.sln --verbosity normal --logger "trx;LogFileName=TestOutputResults.xml"' -f xml  -o 'coverage.xml'
      - name: SonarScanner End
        run: dotnet sonarscanner end /d:sonar.login="${{secrets.SONAR_TOKEN}}"
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            **/TestResults/*.xml
            **/TestResults/*.trx
