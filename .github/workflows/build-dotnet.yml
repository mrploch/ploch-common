# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - run: echo "The branch name is ${{ github.repository }}"
      - uses: actions/checkout@v3
      - name: Copy documentation files
        run: cp ./README.md ./DocumentationSite/index.md
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.x
      - name: Restore dependencies
        run: dotnet restore Ploch.Common.sln
      - name: Install SonarCloud Scanner
        run: dotnet tool install --global dotnet-sonarscanner
      - name: Install dotnet-coverage
        run: dotnet tool install --global dotnet-coverage
      - name: SonarScanner Begin
        run: dotnet sonarscanner begin /k:"mrploch_ploch-common" /o:"mrploch" /d:sonar.login="${{secrets.SONAR_TOKEN}}" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.host.url="https://sonarcloud.io"
      - name: Build
        run: dotnet build Ploch.Common.sln --no-restore
      - name: Test Coverage
        run: dotnet-coverage collect 'dotnet test Ploch.Common.sln --verbosity normal --logger "trx;LogFileName=TestOutputResults.xml"' -f xml -o "coverage.xml"
      - name: SonarScanner End
        run: dotnet sonarscanner end /d:sonar.login="${{secrets.SONAR_TOKEN}}"
      # - name: Publish Test Results
      #   uses: EnricoMi/publish-unit-test-result-action@v2
      #   if: always()
      #   with:
      #     files: |
      #       **/TestResults/*.xml
      #       **/TestResults/*.trx
      - name: Upload Test Results
        uses: actions/upload-artifact@v3  # upload test results
        if: success() || failure()        # run this step even if previous step failed
        with:
          name: test-results
          path: |
            **/TestResults/*.xml
            **/TestResults/*.trx
      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          # or
          # api-token: ${{ secrets.CODACY_API_TOKEN }}
          coverage-reports: coverage.xml
          # or a comma-separated list for multiple reports
          # coverage-reports: <PATH_TO_REPORT>, <PATH_TO_REPORT>
      - name: Test Report
        uses: phoenix-actions/test-reporting@v8
        id: test-report               # Set ID reference for step
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: Dotnet Tests
          path: '**/TestResults/TestOutputResults.xml'
          reporter: dotnet-trx
      - name: Deploy GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./DocumentationSite/_site
      # Publish all NuGet packages to NuGet.org
      # Use --skip-duplicate to prevent errors if a package with the same version already exists.
      # If you retry a failed workflow, already published packages will be skipped without error.
      - name: Add GitHub Packages source
        run: dotnet nuget add source --username kploch --password ${{secrets.GH_PACKAGES_TOKEN}} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/mrploch/index.json"
      - name: Publish NuGet package
        run: dotnet nuget push **/*.nupkg --source github -k ${{secrets.GH_PACKAGES_TOKEN}}
