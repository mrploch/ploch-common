# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: NuGetAuthenticate@0
  displayName: 'NuGet Authenticate'

- task: DotNetCoreCLI@2
  displayName: 'Restore Projects'
  inputs:
    command: 'restore'
    feedsToUse: 'select'
    vstsFeed: 'b78351fb-acc3-4d97-a67c-2998c989189e'
    projects: './Ploch.Common.sln'
    arguments: '--configuration $(buildConfiguration)'
    configuration: $(buildConfiguration)
    
- task: DotNetCoreCLI@2
  displayName: 'Build Projects'  
  inputs:
    command: 'build'    
    projects: './Ploch.Common.sln'
    arguments: '--configuration $(buildConfiguration)'
    configuration: $(buildConfiguration)


- task: DotNetCoreCLI@2
  name: 'RunTests'
  displayName: 'Run Tests'
  inputs:
    command: test
    projects: './Ploch.Common.sln'
    arguments: '--no-build --configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=TestResults/Coverage/'
    publishTestResults: true
- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage report'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'
# - task: DotNetCoreCLI@2
#   displayName: 'Nuget Pack'
#   inputs:
#     command: pack
#     nuGetFeedType: internal
#     includeNuGetOrg: true   
#     feedsToUse: select
#     vstsFeed: 'b78351fb-acc3-4d97-a67c-2998c989189e'      
#     projects: './Ploch.Common.sln'
#     arguments: '--no-restore --no-build --configuration $(buildConfiguration)'
#     versioningScheme: byPrereleaseNumber
#     majorVersion: '$(Major)'
#     minorVersion: '$(Minor)'
#     patchVersion: '$(Patch)'
- task: DotNetCoreCLI@2
  displayName: 'DotNet Pack'
  inputs:
    command: 'pack'
    packagesToPack: './Ploch.Common.sln'
    nobuild: true    
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '$(Major)'
    minorVersion: '$(Minor)'
    patchVersion: '$(Patch)'
    arguments: '--configuration $(buildConfiguration)'
    configuration: $(buildConfiguration)
    
# - task: DotNetCoreCLI@2
#   displayName: 'DotNet Push'
#   inputs:
#     command: 'push'
#     packagesToPush: '
#     nuGetFeedType: 'internal'
#     publishVstsFeed: 'b78351fb-acc3-4d97-a67c-2998c989189e'
#     arguments: '--configuration $(buildConfiguration)'
#     configuration: $(buildConfiguration)

# - task: NuGetCommand@2
#   inputs:
#     command: 'push'
#     feedsToUse: 'config'
#     includeNugetOrg: true
#     nuGetFeedType: external
#     arguments: '-ApiKey $(NUGET-ORG-API-KEY)'
#     publishFeedCredentials: 'nuget-org'
# - task: NuGetCommand@2
#   inputs:
#     command: 'push'
#     packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
#     nuGetFeedType: 'external'
#     publishFeedCredentials: 'nuget-org'

- task: DotNetCoreCLI@2
  inputs:
    command: 'custom'
    custom: 'nuget push'
    packagesToPack: "$(Build.ArtifactStagingDirectory)/*.nupkg"
    arguments: '--api-key "$(nuget-org-api-key)"" --source "https://api.nuget.org/v3/index.json"'